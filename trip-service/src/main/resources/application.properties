# ========================================
# APPLICATION
# ========================================
spring.application.name=trip-service
server.port=8083

# ========================================
# DATABASE CONFIGURATION
# ========================================
spring.jpa.hibernate.ddl-auto=update
spring.datasource.url=jdbc:postgresql://localhost:5432/EcoRide
spring.datasource.username=postgres
spring.datasource.password=mini
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# ========================================
# KAFKA CONFIGURATION
# ========================================
spring.kafka.bootstrap-servers=localhost:9092

# Producer
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.acks=all
spring.kafka.producer.retries=3
spring.kafka.producer.properties.enable.idempotence=true
spring.kafka.producer.properties.max.in.flight.requests.per.connection=5

# Consumer
spring.kafka.consumer.group-id=trip-service-iot-group
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.enable-auto-commit=false
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.properties.max.poll.records=100

# ========================================
# EXTERNAL SERVICES
# ========================================
user.service.url=http://localhost:8081
payment.service.url=http://localhost:8082

# ========================================
# OSRM (OpenStreetMap Routing)
# ========================================
osrm.api.url=http://router.project-osrm.org

# ========================================
# IOT SIMULATION CONFIGURATION
# ========================================
iot.simulation.enabled=true
iot.simulation.telemetry.interval.seconds=5
iot.simulation.battery.drain.rate=0.8
iot.simulation.speed.min=12.0
iot.simulation.speed.max=25.0

# ========================================
# TRIP COSTS CONFIGURATION
# ========================================
trip.cost.last-mile.base=17500
trip.cost.last-mile.extra-minute=250
trip.cost.last-mile.max-minutes=45
trip.cost.long-distance.base=25000
trip.cost.long-distance.extra-minute=1000
trip.cost.long-distance.max-minutes=75

# ========================================
# VALIDATION CONFIGURATION
# ========================================
validation.station.proximity.meters=30.0
validation.bogota.min-lat=4.45
validation.bogota.max-lat=4.85
validation.bogota.min-lon=-74.25
validation.bogota.max-lon=-73.95

# ========================================
# SCHEDULER
# ========================================
spring.task.scheduling.pool.size=5

# ========================================
# LOGGING
# ========================================
logging.level.co.edu.unbosque.tripservice=DEBUG
logging.level.org.springframework.kafka=INFO
logging.level.org.apache.kafka=WARN
logging.level.org.hibernate.SQL=DEBUG
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} - %msg%n

# ========================================
# ACTUATOR
# ========================================
management.endpoints.web.exposure.include=health,info,metrics,prometheus
management.endpoint.health.show-details=always
management.metrics.export.prometheus.enabled=true

# ========================================
# CACHE (Routes)
# ========================================
spring.cache.type=caffeine
spring.cache.caffeine.spec=maximumSize=1000,expireAfterWrite=3600s
spring.cache.cache-names=routes